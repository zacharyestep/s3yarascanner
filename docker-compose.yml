version: '3.7'

# starts 4 docker containers running minio server instances. Each
# minio server's web interface will be accessible on the host at port
# 9001 through 9004.
services:
  scanner:
    hostname: scanner
    build: 
      context: ./cmd/s3yarascanner
      args:
        RULESDIR: /go/rules 
        BINARYDIR: /go/bins 
        SQLITEDB: /go/db/results.db
        FEEDSERVERTEMPLATEFILE: /go/feed.tmpl
    #volumes:
    #  - type: bind
    #    source: $PWD
    #    target: /vol
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:31425/health"]
      interval: 30s
      timeout: 20s
      retries: 3

    environment:
      BINARYSOURCEBUCKET: bucket 
      ENDPOINTURL: http://minio:9000 
      SQLITEDB: ./db/results.db 
      RULESDIR: ./rules 
      BINARYDIR: ./bins
      FEEDSERVERTEMPLATEFIE: ./feed.tmpl 
      AWS_ACCESS_KEY: minio 
      AWS_SECRET_KEY: minio123 
      S3FORCEPATHSTYLE: 1 
      DISABLESSL: 1
      AWS_REGION: us-east-1 
      LOGLEVEL: debug

  minio1:
    hostname: minio
    image: minio/minio:latest
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  data1-1:
  data1-2: